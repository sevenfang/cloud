# tomcat
server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
# spring
spring:
  application:
    name: shianxian-trace
  # 数据库访问配置
  datasource:
    name: new_trace
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/new_trace?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: Honest@1101
    max-idle: 10
    max-wait: 10000
    min-idle: 5
    initial-size: 5
    # 德鲁伊连接池的补充设置，应用到上面所有数据源中
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    logSlowSql: true

  # redis
  redis:
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # 密码
    password:
    # 连接超时时间（毫秒）
    timeout: 0
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0

  # RabbitMQ
  rabbitmq:
    addresses: localhost
    port: 5672
    username: admin
    password: 123456
    virtual-host: /

# eureka
eurekaServer:
  host: localhost
  port: 8091
  user: admin
  password: 123456

eureka:
  client:
    #将此项目注册到Eureka服务
    register-with-eureka: true
    service-url:
      defaultZone: http://${eurekaServer.user}:${eurekaServer.password}@${eurekaServer.host}:${eurekaServer.port}/eureka

# feign开启Hystrix
feign:
  hystrix:
    enabled: true

# zuul、负载均衡
zuul:
  routes:
    trace:
      path: /platform/**
      serviceId: shianxian-platform
# 实现zuul的负载均衡
#shianxian-platform:
#  ribbon:
#    listOfServers: http://localhost:8092,http://localhost:8093

# 日志
logging:
  level:
    root: DEBUG
  config: classpath:log/logback-spring-dev.xml
